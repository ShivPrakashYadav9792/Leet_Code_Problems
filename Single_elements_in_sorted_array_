class Solution {
public:
    int singleNonDuplicate(vector<int>& nums)
     {      
         int start=0;
         int k=nums.size()-1;
        if (k+1== 1) 
        return nums[0];
        if(nums[0]!=nums[1])
        {
             return nums[0];
        }
        if(nums[k-1]!=nums[k])
        {
            return nums[k];
        }
        while(start<=k)
        {
            int mid=(start+k+1)/2;
            if(nums[mid]!=nums[mid+1]&&nums[mid-1]!=nums[mid])
            {
                return nums[mid];
            }
            else if ((nums[mid] == nums[mid + 1]&& mid % 2 == 0)|| (nums[mid] == nums[mid - 1] && mid % 2 != 0))
            start = mid + 1;
            else
            k = mid - 1;
    
        }
        return nums[start];
    }
    
};